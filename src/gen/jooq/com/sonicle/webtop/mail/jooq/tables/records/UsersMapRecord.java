/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.mail.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersMapRecord extends org.jooq.impl.UpdatableRecordImpl<UsersMapRecord> implements org.jooq.Record7<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mail.users_map.domain_id</code>.
     */
    public void setDomainId(java.lang.String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mail.users_map.domain_id</code>.
     */
    public java.lang.String getDomainId() {
        return (java.lang.String) get(0);
    }

    /**
     * Setter for <code>mail.users_map.user_id</code>.
     */
    public void setUserId(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mail.users_map.user_id</code>.
     */
    public java.lang.String getUserId() {
        return (java.lang.String) get(1);
    }

    /**
     * Setter for <code>mail.users_map.mail_user</code>.
     */
    public void setMailUser(java.lang.String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mail.users_map.mail_user</code>.
     */
    public java.lang.String getMailUser() {
        return (java.lang.String) get(2);
    }

    /**
     * Setter for <code>mail.users_map.mail_password</code>.
     */
    public void setMailPassword(java.lang.String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mail.users_map.mail_password</code>.
     */
    public java.lang.String getMailPassword() {
        return (java.lang.String) get(3);
    }

    /**
     * Setter for <code>mail.users_map.mail_host</code>.
     */
    public void setMailHost(java.lang.String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mail.users_map.mail_host</code>.
     */
    public java.lang.String getMailHost() {
        return (java.lang.String) get(4);
    }

    /**
     * Setter for <code>mail.users_map.mail_port</code>.
     */
    public void setMailPort(java.lang.Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mail.users_map.mail_port</code>.
     */
    public java.lang.Integer getMailPort() {
        return (java.lang.Integer) get(5);
    }

    /**
     * Setter for <code>mail.users_map.mail_protocol</code>.
     */
    public void setMailProtocol(java.lang.String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mail.users_map.mail_protocol</code>.
     */
    public java.lang.String getMailProtocol() {
        return (java.lang.String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record2<java.lang.String, java.lang.String> key() {
        return (org.jooq.Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row7<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String> fieldsRow() {
        return (org.jooq.Row7) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row7<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String> valuesRow() {
        return (org.jooq.Row7) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field1() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.DOMAIN_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.USER_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field3() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.MAIL_USER;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field4() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.MAIL_PASSWORD;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field5() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.MAIL_HOST;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field6() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.MAIL_PORT;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field7() {
        return com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP.MAIL_PROTOCOL;
    }

    @java.lang.Override
    public java.lang.String component1() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getUserId();
    }

    @java.lang.Override
    public java.lang.String component3() {
        return getMailUser();
    }

    @java.lang.Override
    public java.lang.String component4() {
        return getMailPassword();
    }

    @java.lang.Override
    public java.lang.String component5() {
        return getMailHost();
    }

    @java.lang.Override
    public java.lang.Integer component6() {
        return getMailPort();
    }

    @java.lang.Override
    public java.lang.String component7() {
        return getMailProtocol();
    }

    @java.lang.Override
    public java.lang.String value1() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getUserId();
    }

    @java.lang.Override
    public java.lang.String value3() {
        return getMailUser();
    }

    @java.lang.Override
    public java.lang.String value4() {
        return getMailPassword();
    }

    @java.lang.Override
    public java.lang.String value5() {
        return getMailHost();
    }

    @java.lang.Override
    public java.lang.Integer value6() {
        return getMailPort();
    }

    @java.lang.Override
    public java.lang.String value7() {
        return getMailProtocol();
    }

    @java.lang.Override
    public UsersMapRecord value1(java.lang.String value) {
        setDomainId(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value2(java.lang.String value) {
        setUserId(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value3(java.lang.String value) {
        setMailUser(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value4(java.lang.String value) {
        setMailPassword(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value5(java.lang.String value) {
        setMailHost(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value6(java.lang.Integer value) {
        setMailPort(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord value7(java.lang.String value) {
        setMailProtocol(value);
        return this;
    }

    @java.lang.Override
    public UsersMapRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.Integer value6, java.lang.String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersMapRecord
     */
    public UsersMapRecord() {
        super(com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP);
    }

    /**
     * Create a detached, initialised UsersMapRecord
     */
    public UsersMapRecord(java.lang.String domainId, java.lang.String userId, java.lang.String mailUser, java.lang.String mailPassword, java.lang.String mailHost, java.lang.Integer mailPort, java.lang.String mailProtocol) {
        super(com.sonicle.webtop.mail.jooq.tables.UsersMap.USERS_MAP);

        setDomainId(domainId);
        setUserId(userId);
        setMailUser(mailUser);
        setMailPassword(mailPassword);
        setMailHost(mailHost);
        setMailPort(mailPort);
        setMailProtocol(mailProtocol);
    }
}
