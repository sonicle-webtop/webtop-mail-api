/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.mail.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Identities extends org.jooq.impl.TableImpl<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mail.identities</code>
     */
    public static final Identities IDENTITIES = new Identities();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> getRecordType() {
        return com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord.class;
    }

    /**
     * The column <code>mail.identities.identity_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.Integer> IDENTITY_ID = createField(org.jooq.impl.DSL.name("identity_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mail.seq_identities'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mail.identities.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mail.identities.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.identities.email</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> EMAIL = createField(org.jooq.impl.DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.identities.display_name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> DISPLAY_NAME = createField(org.jooq.impl.DSL.name("display_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.identities.main_folder</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> MAIN_FOLDER = createField(org.jooq.impl.DSL.name("main_folder"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>mail.identities.fax</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.Boolean> FAX = createField(org.jooq.impl.DSL.name("fax"), org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>mail.identities.identity_uid</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord, java.lang.String> IDENTITY_UID = createField(org.jooq.impl.DSL.name("identity_uid"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    private Identities(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Identities(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>mail.identities</code> table reference
     */
    public Identities(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), IDENTITIES);
    }

    /**
     * Create an aliased <code>mail.identities</code> table reference
     */
    public Identities(org.jooq.Name alias) {
        this(alias, IDENTITIES);
    }

    /**
     * Create a <code>mail.identities</code> table reference
     */
    public Identities() {
        this(org.jooq.impl.DSL.name("identities"), null);
    }

    public <O extends org.jooq.Record> Identities(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> key) {
        super(child, key, IDENTITIES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.mail.jooq.Mail.MAIL;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.mail.jooq.Indexes.IDENTITIES_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord> getPrimaryKey() {
        return com.sonicle.webtop.mail.jooq.Keys.IDENTITIES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.IdentitiesRecord>>asList(com.sonicle.webtop.mail.jooq.Keys.IDENTITIES_PKEY);
    }

    @java.lang.Override
    public Identities as(java.lang.String alias) {
        return new Identities(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Identities as(org.jooq.Name alias) {
        return new Identities(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Identities rename(java.lang.String name) {
        return new Identities(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Identities rename(org.jooq.Name name) {
        return new Identities(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row8<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }
}
