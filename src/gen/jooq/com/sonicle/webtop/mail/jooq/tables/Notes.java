/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.mail.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notes extends org.jooq.impl.TableImpl<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mail.notes</code>
     */
    public static final Notes NOTES = new Notes();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> getRecordType() {
        return com.sonicle.webtop.mail.jooq.tables.records.NotesRecord.class;
    }

    /**
     * The column <code>mail.notes.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mail.notes.message_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord, java.lang.String> MESSAGE_ID = createField(org.jooq.impl.DSL.name("message_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>mail.notes.text</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord, java.lang.String> TEXT = createField(org.jooq.impl.DSL.name("text"), org.jooq.impl.SQLDataType.CLOB, this, "");

    private Notes(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Notes(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>mail.notes</code> table reference
     */
    public Notes(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), NOTES);
    }

    /**
     * Create an aliased <code>mail.notes</code> table reference
     */
    public Notes(org.jooq.Name alias) {
        this(alias, NOTES);
    }

    /**
     * Create a <code>mail.notes</code> table reference
     */
    public Notes() {
        this(org.jooq.impl.DSL.name("notes"), null);
    }

    public <O extends org.jooq.Record> Notes(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> key) {
        super(child, key, NOTES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.mail.jooq.Mail.MAIL;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord> getPrimaryKey() {
        return com.sonicle.webtop.mail.jooq.Keys.NOTES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.NotesRecord>>asList(com.sonicle.webtop.mail.jooq.Keys.NOTES_PKEY);
    }

    @java.lang.Override
    public Notes as(java.lang.String alias) {
        return new Notes(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Notes as(org.jooq.Name alias) {
        return new Notes(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Notes rename(java.lang.String name) {
        return new Notes(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Notes rename(org.jooq.Name name) {
        return new Notes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row3<java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row3) super.fieldsRow();
    }
}
