/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.mail.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersMap extends org.jooq.impl.TableImpl<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mail.users_map</code>
     */
    public static final UsersMap USERS_MAP = new UsersMap();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> getRecordType() {
        return com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord.class;
    }

    /**
     * The column <code>mail.users_map.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mail.users_map.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.users_map.mail_user</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> MAIL_USER = createField(org.jooq.impl.DSL.name("mail_user"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.users_map.mail_password</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> MAIL_PASSWORD = createField(org.jooq.impl.DSL.name("mail_password"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>mail.users_map.mail_host</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> MAIL_HOST = createField(org.jooq.impl.DSL.name("mail_host"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>mail.users_map.mail_port</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.Integer> MAIL_PORT = createField(org.jooq.impl.DSL.name("mail_port"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mail.users_map.mail_protocol</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord, java.lang.String> MAIL_PROTOCOL = createField(org.jooq.impl.DSL.name("mail_protocol"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    private UsersMap(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsersMap(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>mail.users_map</code> table reference
     */
    public UsersMap(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), USERS_MAP);
    }

    /**
     * Create an aliased <code>mail.users_map</code> table reference
     */
    public UsersMap(org.jooq.Name alias) {
        this(alias, USERS_MAP);
    }

    /**
     * Create a <code>mail.users_map</code> table reference
     */
    public UsersMap() {
        this(org.jooq.impl.DSL.name("users_map"), null);
    }

    public <O extends org.jooq.Record> UsersMap(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> key) {
        super(child, key, USERS_MAP);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.mail.jooq.Mail.MAIL;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord> getPrimaryKey() {
        return com.sonicle.webtop.mail.jooq.Keys.USERS_MAP_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.UsersMapRecord>>asList(com.sonicle.webtop.mail.jooq.Keys.USERS_MAP_PKEY);
    }

    @java.lang.Override
    public UsersMap as(java.lang.String alias) {
        return new UsersMap(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public UsersMap as(org.jooq.Name alias) {
        return new UsersMap(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public UsersMap rename(java.lang.String name) {
        return new UsersMap(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public UsersMap rename(org.jooq.Name name) {
        return new UsersMap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row7<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String> fieldsRow() {
        return (org.jooq.Row7) super.fieldsRow();
    }
}
