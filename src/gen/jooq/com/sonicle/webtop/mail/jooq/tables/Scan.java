/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.mail.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scan extends org.jooq.impl.TableImpl<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mail.scan</code>
     */
    public static final Scan SCAN = new Scan();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> getRecordType() {
        return com.sonicle.webtop.mail.jooq.tables.records.ScanRecord.class;
    }

    /**
     * The column <code>mail.scan.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mail.scan.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>mail.scan.foldername</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord, java.lang.String> FOLDERNAME = createField(org.jooq.impl.DSL.name("foldername"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    private Scan(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> aliased) {
        this(alias, aliased, null);
    }

    private Scan(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>mail.scan</code> table reference
     */
    public Scan(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), SCAN);
    }

    /**
     * Create an aliased <code>mail.scan</code> table reference
     */
    public Scan(org.jooq.Name alias) {
        this(alias, SCAN);
    }

    /**
     * Create a <code>mail.scan</code> table reference
     */
    public Scan() {
        this(org.jooq.impl.DSL.name("scan"), null);
    }

    public <O extends org.jooq.Record> Scan(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> key) {
        super(child, key, SCAN);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.mail.jooq.Mail.MAIL;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord> getPrimaryKey() {
        return com.sonicle.webtop.mail.jooq.Keys.MAILSCAN_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.mail.jooq.tables.records.ScanRecord>>asList(com.sonicle.webtop.mail.jooq.Keys.MAILSCAN_PKEY);
    }

    @java.lang.Override
    public Scan as(java.lang.String alias) {
        return new Scan(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Scan as(org.jooq.Name alias) {
        return new Scan(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Scan rename(java.lang.String name) {
        return new Scan(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Scan rename(org.jooq.Name name) {
        return new Scan(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row3<java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row3) super.fieldsRow();
    }
}
